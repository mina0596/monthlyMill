<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.monthlyMill.smartstore.SmartstoreProductMapper">

	<!-- ============================= 상품에 대한 정보 ============================ -->
	<resultMap type="SmartStoreProduct"	id="SmartStoreProductResultMap">
		<result property="idx"			column="idx"/>
		<result property="pCode"		column="product_code"/>
		<result property="pName"			column="product_name"/>
		<result property="wrappingType"			column="wrapping_type"/>
		<result property="pPrice"		column="product_price"/>
		<result property="item01"		column="item_01"/>
		<result property="item02"		column="item_02"/>
		<result property="item03"		column="item_03"/>
		<result property="item04"		column="item_04"/>
		<result property="item05"		column="item_05"/>
		<result property="item06"		column="item_06"/>
		<result property="item07"		column="item_07"/>
		<result property="item08"		column="item_08"/>
		<result property="item09"		column="item_09"/>
		<result property="item10"		column="item_10"/>
		<result property="item11"		column="item_11"/>
		<result property="item12"		column="item_12"/>
		<result property="item13"		column="item_13"/>
		<result property="item14"		column="item_14"/>
		<result property="item15"		column="item_15"/>
		<result property="item16"		column="item_16"/>
		<result property="item17"		column="item_17"/>
		<result property="item18"		column="item_18"/>
		<result property="item19"		column="item_19"/>
		<result property="memo"		column="memo"/>
		<result property="regDate"		column="reg_date"/>
		<result property="modifyDate"		column="modify_date"/>
		<result property="regMId"		column="reg_m_id"/>
		<result property="modifyMId"		column="modify_m_id"/>
		<result property="originalCheck"		column="original_check"/>
	</resultMap>
	
	
	<!-- ====== 모든 상품 조회 ====== -->
	<select id="getAllProductInfo" resultMap="SmartStoreProductResultMap">
		SELECT idx, product_code, product_name, wrapping_type, product_price, item_01, item_02, item_03, item_04, item_05, item_06, item_07, item_08, item_09, 
		item_10, item_11, item_12, item_13, item_14, item_15, item_16, item_17, item_18, item_19, memo, reg_date, modify_date, reg_m_id, modify_m_id, original_check
		FROM smartstore_product_info
		WHERE original_check = 'Y';
	</select>
	
	
	<!-- 모든 포장재 종류 가져오기  -->
	<select id="getAllWrappingType" resultType="map">
		SELECT
			DISTINCT(p.wrapping_type) AS wrappingType
		FROM
			smartstore_product_info AS p
	</select>
	
	<!-- 모든 상품 구분명 가져오기 -->
	<select id="getAllPName" resultType="map">
		SELECT
			DISTINCT(p.product_name) AS pName,
			p.product_code AS pCode
		FROM
			smartstore_product_info AS p
			WHERE p.original_check = 'Y'
	</select>
	
	<select id="getSearchProductInfo" parameterType="map" resultMap="SmartStoreProductResultMap">
		SELECT
			*
		FROM
			smartstore_product_info AS p
			WHERE p.original_check = 'Y' 
			<trim prefix="AND">
				<if test="searchKey == '구분명'">
					p.product_name LIKE CONCAT ('%', #{searchValue}, '%');
				</if>
				<if test="searchKey == '포장재'">
					p.wrapping_type LIKE CONCAT ('%', #{searchValue}, '%');
				</if>
				<if test="searchKey == '비고'">
					p.memo LIKE CONCAT ('%', #{searchValue}, '%');
				</if>
			</trim>
	</select>
	
	<!-- ====== 상품코드 시퀀스 가져오기 ======= -->
	<select id="getPcodeSequence" resultType="String">
		SELECT
			if(COUNT(0)=0, '0001', LPAD(cast(substring(MAX(spi.product_code), 11, 14) as decimal)+1,4,0))
		FROM
			smartstore_product_info AS spi
			where
				spi.reg_date = CURDATE();
	</select>
	
	<!-- ====== 상품 등록하기 ====== -->
	<insert id="addNewProduct" parameterType="SmartStoreProduct">
		INSERT INTO smartstore_product_info
		(idx, product_code, product_name, wrapping_type, product_price, item_01, item_02, item_03, item_04, item_05, item_06, item_07, item_08, item_09, item_10, item_11, item_12, item_13, item_14, item_15, item_16, item_17, item_18, item_19, memo, reg_date, modify_date, reg_m_id, modify_m_id, original_check)
		VALUES (NULL, #{pCode}, #{pName}, #{wrappingType}, #{pPrice}, #{item01}, #{item02}, #{item03}, #{item04}, #{item05}, #{item06}, 
		#{item07}, #{item08}, #{item09}, #{item10}, #{item11}, #{item12}, #{item13}, #{item14},
		#{item15}, #{item16}, #{item17}, #{item18}, #{item19},
		#{memo}, NOW(), NOW(), '', '', 'Y')
	</insert>
	
	
	<!-- 생산일지에서 상품에 대한 정보 수정 -->
	<!-- 같은 상품 테이블에 original_check 컬럼에 'N' 로 넣어줌 -->
	<insert id="updateProductionInfo" parameterType="map">
		INSERT INTO smartstore_product_info
			(idx, product_code, product_name, wrapping_type, product_price, item_01, item_02, item_03, item_04, item_05, item_06, 
			item_07, item_08, item_09, item_10, item_11, item_12, item_13, item_14, 
			item_15, item_16, item_17, item_18, item_19, memo, reg_date, modify_date, reg_m_id, modify_m_id, original_check)
		VALUES 
			(NULL, #{pCode}, #{pName}, #{wrappingType}, #{pPrice}, #{item01}, #{item02}, #{item03}, #{item04}, #{item05}, #{item06}, 
			#{item07}, #{item08}, #{item09}, #{item10}, #{item11}, #{item12}, #{item13}, #{item14},
			#{item15}, #{item16}, #{item17}, #{item18}, #{item19},
			#{memo}, NOW(), NOW(), '', #{modMId}, 'N')
		
	</insert>
	
	<!-- 등록된 상품명/상품코드들 가져오기 -->
	<select id="getAllProductName" resultType="map">
		SELECT 
			p.product_name as pName,
			p.product_code as pCode
		FROM 
			smartstore_product_info AS p
	</select>
	
	<select id="getProductInfoByPcode" parameterType="String" resultMap="SmartStoreProductResultMap">
		SELECT
			p.*
		FROM
			smartstore_product_info AS p
		WHERE 
			p.product_code = #{pCode}
	</select>
	
	<!-- ************************************************************************** -->
	<!-- ================================== 회원에 대한 정보 ========================== -->
	<resultMap type="SmartStoreMember" id="SmartStoreMemberResultMap">
		<result property="idx" column="idx"/>
		<result property="mId" column="m_id"/>
		<result property="mPw" column="m_pw"/>
		<result property="mName" column="m_name"/>
		<result property="mDep" column="m_dep"/>
		<result property="mPhone" column="m_phone"/>
		<result property="mEmail" column="m_email"/>
		<result property="regDate" column="reg_date"/>
	</resultMap>
	
	<!-- 아이디로 회원정보 가져오기  -->
	<select id="getMemberInfoById" parameterType="String" resultMap="SmartStoreMemberResultMap">
		SELECT idx, m_id, m_pw, m_name, m_dep, m_phone, reg_date, m_email
		FROM smartstore_member_info
		WHERE m_id = #{inputId}
	</select>
	
	
	<!-- 회원가입 -->
	<insert id="addMember" parameterType="map">
		INSERT INTO smartstore_member_info
			(idx, m_id, m_pw, m_name, m_dep, m_phone, reg_date, m_email)
		VALUES (NULL, #{inputId}, #{encodedPw}, #{inputName}, #{inputDept}, #{inputPhone}, CURDATE(), #{inputEmail})
	</insert>
	
	
</mapper>