<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.monthlyMill.customer.order.OrderMapper">
	<resultMap type="Order"	id="orderResultMap">
		<result property="idx"					column="idx"/>
		<result property="orderNum"				column="order_num"/>
		<result property="memberNum"			column="member_num"/>
		<result property="pCode"				column="product_code"/>
		<result property="cartNum"				column="cart_num"/>
		<result property="pCount"				column="product_count"/>
		<result property="orderDate"			column="order_date"/>
		<result property="expDelDate"			column="exp_delivery_date"/>
		<result property="paymentCheck"			column="payment_check"/>
		<result property="refundCheck"			column="refund_check"/>
		<result property="orderModifyDate"		column="order_modify_date"/>
		<result property="orderRegDate"			column="order_reg_date"/>
		<result property="receiverName"			column="receiver_name"/>
		<result property="receiverPhoneNum"		column="receiver_phone"/>
		<result property="receiverHomeNum"		column="receiver_home"/>
		<result property="receiverPostalCode"	column="receiver_postal_code"/>
		<result property="receiverAddr"			column="receiver_addr"/>
		<result property="receiverDetailAddr"	column="receiver_detail_addr"/>
	</resultMap>
	
	<select id="selectOrderSequence" resultType="String" parameterType="int">
		SELECT
			if(COUNT(0)=0, '0001', LPAD(cast(substring(MAX(oi.order_num), 11, 14) as decimal)+1,4,0))
		FROM
			order_info AS oi
			where
				oi.order_reg_date = CURDATE();
	</select>
	
	<insert id="addOrder" parameterType="Order">
		INSERT INTO order_info
			(idx, order_num, member_num, product_code, cart_num, product_count, order_date, exp_delivery_date, payment_check, refund_check, order_modify_date, order_reg_date, receiver_name, receiver_phone, receiver_home, receiver_postal_code, receiver_addr, receiver_detail_addr, cancel_check)
		VALUES (NULL, #{orderNum}, #{memberNum}, #{pCode}, #{cartNum}, #{pCount}, NOW(), NOW(), 'N', 'N', CURDATE(), CURDATE()
			, #{receiverName}, #{receiverPhoneNum}, #{receiverHomeNum}, #{receiverPostalCode}, #{receiverAddr}, #{receiverDetailAddr}, 'N')
	</insert>
	
	
	<!--  입금확인되면 update됨 -->
	<update id="updatePaymentConfirm" parameterType="int">
		UPDATE order_info
		SET
			payment_check='Y',
			order_modify_date=CURDATE()
		WHERE member_num=#{memberNum} 
		and payment_check='N';
	</update>
	<!-- 
	<delete id="deleteFromCart" parameterType="">
	
	</delete>
	 -->
	
	<select id="getOrderListByMemberNum" parameterType="int" resultType="map">
		SELECT o.idx, o.order_num AS orderNum, o.member_num, o.product_code, o.cart_num, 
			o.product_count AS pCount, 
			o.order_date, 
			order_reg_date AS orderRegDate,
			p.product_name AS pName,
			p.product_price AS pPrice
		FROM 
			order_info AS o
		INNER join
			product_info AS p
		ON 
			o.product_code = p.product_code
		WHERE member_num = #{memberNum}
		and o.cancel_check = 'N';
	</select>
	
	<select id="getOrderNumByMemberNum" parameterType="int" resultType="map">
		SELECT
			DISTINCT(o.order_num) AS orderNum,
			o.order_reg_date AS orderRegDate
		FROM
			order_info AS o
			where
			o.member_num = #{memberNum} 
			and
			o.cancel_check = 'N';
	</select>
	
	<select id="getOrderByOrderNum" parameterType="String" resultType="map">
		SELECT 
			o.order_num AS orderNum, 
			m.member_name AS mName,
			m.member_phone AS mPhone,
			p.product_name AS pName,
			o.product_count AS pCount,
			p.product_price AS pPrice
		FROM 
			order_info AS o
		INNER join
			member_basic_info AS m
			on
			o.member_num = m.member_num
		INNER join
			product_info AS p
			on
			o.product_code = p.product_code
		WHERE o.order_num = #{orderNum};
	</select>
	
	<insert id="addCancelRequest" parameterType="map">
		INSERT INTO order_cancel
			(idx, order_num, requested_member_num, cancel_reason, detail_reason, total_refund_price, refund_method, approval_check, approved_date, requested_date, approved_member_num)
		VALUES 
			(NULL, #{orderNum}, #{memberNum}, #{cancelReason}, #{cancelDetailReason}, #{refundPrice}, '무통장 입금', 'N', NOW(), NOW(), null);
	</insert>
	
	<select id="getCancelListByMemberNum" parameterType="int" resultType="map">
		SELECT 
			c.order_num AS orderNum,
			c.requested_date AS requestedDate,
			p.product_name AS pName,
			o.product_count AS pCount
		FROM
			order_cancel AS c
			INNER join
			order_info AS o
			on
			c.order_num = o.order_num
			INNER join
			product_info AS p
			on
			o.product_code = p.product_code
			where
			c.requested_member_num = #{memberNum}
	</select>
	
	<select id="getCanceledOrderNum" parameterType="int" resultType="map">
		SELECT 
			DISTINCT(c.order_num) AS orderNum,
			c.requested_date AS requestedDate
		FROM
			order_cancel AS c
			where
			c.requested_member_num = #{memberNum}
	</select>
	
</mapper>